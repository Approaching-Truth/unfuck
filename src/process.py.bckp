import cv2
import os
from CSV import CSVLogger  # Import the CSV logging module


def process_video(video_path, args, logger):
    cap = cv2.VideoCapture(video_path)
    if not cap.isOpened():
        print(f"Error: Could not open video {video_path}")
        return

    fps = cap.get(cv2.CAP_PROP_FPS)
    print(f"Processing {video_path} at {fps} FPS")
    process_interval = int(fps / args.fps)  # Only process every Nth frame

    # Initialize heatmap directly if --heatmap argument is passed
    if args.heatmap or args.grayscale:
        _, first_frame = cap.read()
        if not _:
            print("Error: Could not read the first frame of the video.")
            return
        overlay = Overlay(first_frame)

    frame_count = 0
    pigMaps = PigMaps()
    while cap.isOpened():
        frame_count += 1
        ret, frame = cap.read()
        if not ret:
            break

        # Skip frames based on --fps argument
        if frame_count % process_interval != 0:
            continue

        # Perform prediction
        detections = pigMaps.get_detections(frame)
        pigs = pigMaps.get_pig_detection(detections)

        # Detect behaviors based on the predictions and draw bounding boxes
        frame = pigMaps.detect_behavior(frame, detections, frame_count, logger)

     
        # Heatmap logic
        if args.heatmap:
            overlay.updateHeatmap(pigs)
            # Normalize the heatmap to a range of 0-255 for better visualization and apply to current frame
            frame = overlay.apply_to_frame(frame)

        # Convert to grayscale if required
        if args.grayscale:
            frame = overlay.convert_to_grayscale(frame)

        # Show the frame with the detected behaviors
        cv2.imshow("Pig Behavior Detection", frame)

        # Break on 'q' key press
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
        
    # Clean up
    cap.release()
    cv2.destroyAllWindows()
